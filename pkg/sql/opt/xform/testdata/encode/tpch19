exec-ddl
CREATE TABLE public.region
(
    r_regionkey int PRIMARY KEY,
    r_name char(25) NOT NULL,
    r_comment varchar(152)
);
----
TABLE region
 ├── r_regionkey int not null
 ├── r_name string not null
 ├── r_comment string
 └── INDEX primary
      └── r_regionkey int not null

exec-ddl
CREATE TABLE public.nation
(
    n_nationkey int PRIMARY KEY,
    n_name char(25) NOT NULL,
    n_regionkey int NOT NULL,
    n_comment varchar(152),
    INDEX n_rk (n_regionkey ASC),
    CONSTRAINT nation_fkey_region FOREIGN KEY (n_regionkey) references public.region (r_regionkey)
);
----
TABLE nation
 ├── n_nationkey int not null
 ├── n_name string not null
 ├── n_regionkey int not null
 ├── n_comment string
 ├── INDEX primary
 │    └── n_nationkey int not null
 ├── INDEX n_rk
 │    ├── n_regionkey int not null
 │    └── n_nationkey int not null
 └── FOREIGN KEY (n_regionkey) REFERENCES t.public.region (r_regionkey)

exec-ddl
CREATE TABLE public.supplier
(
    s_suppkey int PRIMARY KEY,
    s_name char(25) NOT NULL,
    s_address varchar(40) NOT NULL,
    s_nationkey int NOT NULL,
    s_phone char(15) NOT NULL,
    s_acctbal float NOT NULL,
    s_comment varchar(101) NOT NULL,
    INDEX s_nk (s_nationkey ASC),
    CONSTRAINT supplier_fkey_nation FOREIGN KEY (s_nationkey) references public.nation (n_nationkey)
);
----
TABLE supplier
 ├── s_suppkey int not null
 ├── s_name string not null
 ├── s_address string not null
 ├── s_nationkey int not null
 ├── s_phone string not null
 ├── s_acctbal float not null
 ├── s_comment string not null
 ├── INDEX primary
 │    └── s_suppkey int not null
 ├── INDEX s_nk
 │    ├── s_nationkey int not null
 │    └── s_suppkey int not null
 └── FOREIGN KEY (s_nationkey) REFERENCES t.public.nation (n_nationkey)

exec-ddl
CREATE TABLE public.part
(
    p_partkey int PRIMARY KEY,
    p_name varchar(55) NOT NULL,
    p_mfgr char(25) NOT NULL,
    p_brand char(10) NOT NULL,
    p_type varchar(25) NOT NULL,
    p_size int NOT NULL,
    p_container char(10) NOT NULL,
    p_retailprice float NOT NULL,
    p_comment varchar(23) NOT NULL
);
----
TABLE part
 ├── p_partkey int not null
 ├── p_name string not null
 ├── p_mfgr string not null
 ├── p_brand string not null
 ├── p_type string not null
 ├── p_size int not null
 ├── p_container string not null
 ├── p_retailprice float not null
 ├── p_comment string not null
 └── INDEX primary
      └── p_partkey int not null

exec-ddl
CREATE TABLE public.partsupp
(
    ps_partkey int NOT NULL,
    ps_suppkey int NOT NULL,
    ps_availqty int NOT NULL,
    ps_supplycost float NOT NULL,
    ps_comment varchar(199) NOT NULL,
    PRIMARY KEY (ps_partkey, ps_suppkey),
    INDEX ps_sk (ps_suppkey ASC),
    CONSTRAINT partsupp_fkey_part FOREIGN KEY (ps_partkey) references public.part (p_partkey),
    CONSTRAINT partsupp_fkey_supplier FOREIGN KEY (ps_suppkey) references public.supplier (s_suppkey)
);
----
TABLE partsupp
 ├── ps_partkey int not null
 ├── ps_suppkey int not null
 ├── ps_availqty int not null
 ├── ps_supplycost float not null
 ├── ps_comment string not null
 ├── INDEX primary
 │    ├── ps_partkey int not null
 │    └── ps_suppkey int not null
 ├── INDEX ps_sk
 │    ├── ps_suppkey int not null
 │    └── ps_partkey int not null
 ├── FOREIGN KEY (ps_partkey) REFERENCES t.public.part (p_partkey)
 └── FOREIGN KEY (ps_suppkey) REFERENCES t.public.supplier (s_suppkey)

exec-ddl
CREATE TABLE public.customer
(
    c_custkey int PRIMARY KEY,
    c_name varchar(25) NOT NULL,
    c_address varchar(40) NOT NULL,
    c_nationkey int NOT NULL NOT NULL,
    c_phone char(15) NOT NULL,
    c_acctbal float NOT NULL,
    c_mktsegment char(10) NOT NULL,
    c_comment varchar(117) NOT NULL,
    INDEX c_nk (c_nationkey ASC),
    CONSTRAINT customer_fkey_nation FOREIGN KEY (c_nationkey) references public.nation (n_nationkey)
);
----
TABLE customer
 ├── c_custkey int not null
 ├── c_name string not null
 ├── c_address string not null
 ├── c_nationkey int not null
 ├── c_phone string not null
 ├── c_acctbal float not null
 ├── c_mktsegment string not null
 ├── c_comment string not null
 ├── INDEX primary
 │    └── c_custkey int not null
 ├── INDEX c_nk
 │    ├── c_nationkey int not null
 │    └── c_custkey int not null
 └── FOREIGN KEY (c_nationkey) REFERENCES t.public.nation (n_nationkey)

exec-ddl
CREATE TABLE public.orders
(
    o_orderkey int PRIMARY KEY,
    o_custkey int NOT NULL,
    o_orderstatus char(1) NOT NULL,
    o_totalprice float NOT NULL,
    o_orderdate date NOT NULL,
    o_orderpriority char(15) NOT NULL,
    o_clerk char(15) NOT NULL,
    o_shippriority int NOT NULL,
    o_comment varchar(79) NOT NULL,
    INDEX o_ck (o_custkey ASC),
    INDEX o_od (o_orderdate ASC),
    CONSTRAINT orders_fkey_customer FOREIGN KEY (o_custkey) references public.customer (c_custkey)
);
----
TABLE orders
 ├── o_orderkey int not null
 ├── o_custkey int not null
 ├── o_orderstatus string not null
 ├── o_totalprice float not null
 ├── o_orderdate date not null
 ├── o_orderpriority string not null
 ├── o_clerk string not null
 ├── o_shippriority int not null
 ├── o_comment string not null
 ├── INDEX primary
 │    └── o_orderkey int not null
 ├── INDEX o_ck
 │    ├── o_custkey int not null
 │    └── o_orderkey int not null
 ├── INDEX o_od
 │    ├── o_orderdate date not null
 │    └── o_orderkey int not null
 └── FOREIGN KEY (o_custkey) REFERENCES t.public.customer (c_custkey)

exec-ddl
CREATE TABLE public.lineitem
(
    l_orderkey int NOT NULL,
    l_partkey int NOT NULL,
    l_suppkey int NOT NULL,
    l_linenumber int NOT NULL,
    l_quantity float NOT NULL,
    l_extendedprice float NOT NULL,
    l_discount float NOT NULL,
    l_tax float NOT NULL,
    l_returnflag char(1) NOT NULL,
    l_linestatus char(1) NOT NULL,
    l_shipdate date NOT NULL,
    l_commitdate date NOT NULL,
    l_receiptdate date NOT NULL,
    l_shipinstruct char(25) NOT NULL,
    l_shipmode char(10) NOT NULL,
    l_comment varchar(44) NOT NULL,
    PRIMARY KEY (l_orderkey, l_linenumber),
    INDEX l_ok (l_orderkey ASC),
    INDEX l_pk (l_partkey ASC),
    INDEX l_sk (l_suppkey ASC),
    INDEX l_sd (l_shipdate ASC),
    INDEX l_cd (l_commitdate ASC),
    INDEX l_rd (l_receiptdate ASC),
    INDEX l_pk_sk (l_partkey ASC, l_suppkey ASC),
    INDEX l_sk_pk (l_suppkey ASC, l_partkey ASC),
    CONSTRAINT lineitem_fkey_orders FOREIGN KEY (l_orderkey) references public.orders (o_orderkey),
    CONSTRAINT lineitem_fkey_part FOREIGN KEY (l_partkey) references public.part (p_partkey),
    CONSTRAINT lineitem_fkey_supplier FOREIGN KEY (l_suppkey) references public.supplier (s_suppkey),
    CONSTRAINT lineitem_fkey_partsupp FOREIGN KEY (l_partkey, l_suppkey) references public.partsupp (ps_partkey, ps_suppkey)
);
----
TABLE lineitem
 ├── l_orderkey int not null
 ├── l_partkey int not null
 ├── l_suppkey int not null
 ├── l_linenumber int not null
 ├── l_quantity float not null
 ├── l_extendedprice float not null
 ├── l_discount float not null
 ├── l_tax float not null
 ├── l_returnflag string not null
 ├── l_linestatus string not null
 ├── l_shipdate date not null
 ├── l_commitdate date not null
 ├── l_receiptdate date not null
 ├── l_shipinstruct string not null
 ├── l_shipmode string not null
 ├── l_comment string not null
 ├── INDEX primary
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── INDEX l_ok
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── INDEX l_pk
 │    ├── l_partkey int not null
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── INDEX l_sk
 │    ├── l_suppkey int not null
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── INDEX l_sd
 │    ├── l_shipdate date not null
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── INDEX l_cd
 │    ├── l_commitdate date not null
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── INDEX l_rd
 │    ├── l_receiptdate date not null
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── INDEX l_pk_sk
 │    ├── l_partkey int not null
 │    ├── l_suppkey int not null
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── INDEX l_sk_pk
 │    ├── l_suppkey int not null
 │    ├── l_partkey int not null
 │    ├── l_orderkey int not null
 │    └── l_linenumber int not null
 ├── FOREIGN KEY (l_orderkey) REFERENCES t.public.orders (o_orderkey)
 ├── FOREIGN KEY (l_partkey) REFERENCES t.public.part (p_partkey)
 ├── FOREIGN KEY (l_suppkey) REFERENCES t.public.supplier (s_suppkey)
 └── FOREIGN KEY (l_partkey, l_suppkey) REFERENCES t.public.partsupp (ps_partkey, ps_suppkey)

# --------------------------------------------------
# Q19
# Discounted Revenue
# Reports the gross discounted revenue attributed to the sale of selected parts
# handled in a particular manner. This query is an example of code such as might
# be produced programmatically by a data mining tool.
#
# The Discounted Revenue query finds the gross discounted revenue for all orders
# for three different types of parts that were shipped by air and delivered in
# person. Parts are selected based on the combination of specific brands, a list
# of containers, and a range of sizes.
# --------------------------------------------------
encode perturb-cost=(100.0) count=300
SELECT
    sum(l_extendedprice* (1 - l_discount)) AS revenue
FROM
    lineitem,
    part
WHERE
    (
        p_partkey = l_partkey
        AND p_brand = 'Brand#12'
        AND p_container IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
        AND l_quantity >= 1 AND l_quantity <= 1 + 10
        AND p_size BETWEEN 1 AND 5
        AND l_shipmode IN ('AIR', 'AIR REG')
        AND l_shipinstruct = 'DELIVER IN PERSON'
    )
    OR
    (
        p_partkey = l_partkey
        AND p_brand = 'Brand#23'
        AND p_container IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
        AND l_quantity >= 10 AND l_quantity <= 10 + 10
        AND p_size BETWEEN 1 AND 10
        AND l_shipmode IN ('AIR', 'AIR REG')
        AND l_shipinstruct = 'DELIVER IN PERSON'
    )
    OR
    (
        p_partkey = l_partkey
        AND p_brand = 'Brand#34'
        AND p_container IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
        AND l_quantity >= 20 AND l_quantity <= 20 + 10
        AND p_size BETWEEN 1 AND 15
        AND l_shipmode IN ('AIR', 'AIR REG')
        AND l_shipinstruct = 'DELIVER IN PERSON'
    );
----
2373.462667 89600.000000,127,89606,157,89606.500000,28,58,51,50,129,96000.000000,127,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,138,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2373.462667 96000.000000,127,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,138,89600.000000,127,89606,157,89606.500000,28,58,51,50,129,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2374.283500 89600.000000,127,89606,157,89606.500000,28,58,51,50,129,96000.000000,127,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,89601,157,96002,157,39,51,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,68,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2375.949167 96000.000000,127,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,89600.000000,127,89606,157,89606.500000,28,58,51,50,129,89601,157,96002,157,39,51,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,68,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2436.011479 96000.000000,127,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,138,89600.000000,127,89606,157,89606.500000,28,58,51,50,129,138,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2592.774352 89600.000000,127,89606,157,89606.500000,28,58,51,50,129,96000.000000,127,138,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2592.774352 96000.000000,127,138,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,89600.000000,127,89606,157,89606.500000,28,58,51,50,129,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2592.788352 89600.000000,127,138,89606,157,89606.500000,28,58,51,50,129,96000.000000,127,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,138,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2592.788352 96000.000000,127,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,138,89600.000000,127,138,89606,157,89606.500000,28,58,51,50,129,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2655.323164 96000.000000,127,138,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,89600.000000,127,89606,157,89606.500000,28,58,51,50,129,138,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
2812.100038 96000.000000,127,138,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,129,89600.000000,127,138,89606,157,89606.500000,28,58,51,50,129,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,50,92,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
8534.170000 89600.000000,127,89606,157,89606.500000,28,58,51,50,129,50,87,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,87,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
8544.170000 89600.000000,127,89606,157,89606.500000,28,58,51,50,129,50,87,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,89604,157,89604.500000,28,39,89607,157,0.500000,28,0.500000,28,0.500000,28,0.500000,28,126,147,64,5,96005,157,96005.500000,28,58,5,96005,157,96005.500000,28,82,5,89606,157,89606.500000,28,82,5,109,51,96015,157,0.500000,28,0.500000,28,126,147,64,51,96014,157,96014.500000,28,39,51,50,87,96006,157,0.500000,28,96007,157,95,97,116,115,113,194,157,144,4,3,125
